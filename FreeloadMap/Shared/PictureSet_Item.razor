<span style="@ImageSpanStyle">
    <img id="mapgeo-img" src="@ImageSrc" alt="@ImageAlt" style="@ImageStyle" @onmouseover="OnPointerEnter" @onpointerenter="OnPointerEnter" @ontouchenter="OnPointerEnter" @onmouseout="OnPointerLeave" @onpointerleave="OnPointerLeave" @ontouchleave="OnPointerLeave" @onclick="OnClick" @ontouchstart="OnClick" @ontouchend="OnClickOut"/>
</span>

@code {
    private PictureItemStructure pictureItem;
    [Parameter]
    public PictureItemStructure PictureItem { get { return pictureItem; } set { pictureItem = value; Refresh_ImageFileExtsion(); } }

    private string imageFileExtsion = null;
    public string ImageFileExtsion { get { return imageFileExtsion; } set { imageFileExtsion = value; } } // set留用解决一些名称后缀问题。
    public void Refresh_ImageFileExtsion()
    {
        imageFileExtsion = System.IO.Path.GetExtension(pictureItem.Path);
    }

    [Parameter]
    public MapViewMode ViewMode{ get; set; }

    [Parameter]
    public LevelLocation ThisLocation{ get; set; }

    [Parameter]
    public EventCallback<LevelLocation> OnPointerMapItemChanged { get; set; }

    [Parameter]
    public EventCallback<LevelLocation> OnClickMapItem { get; set; }

    [Parameter]
    public bool ForceShadow{ get; set; }

    [Parameter]
    public int PepoleAmount { get; set; } = 0;

    public string ImageAlt
    {
        get
        {
            return System.IO.Path.GetFileNameWithoutExtension(pictureItem.Name);
        }
    }

    public string ImageSrc
    {
        get
        {
            return pictureItem.Path;
        }
    }

    public string ImageSpanStyle
    {
        get{
#if _SYS_PATH_URI
            Bitmap bitmap = (Bitmap)Bitmap.FromFile(System.IO.Path.Combine("wwwroot", PictureItem.Path));
#elif _LIB_PATH_URI
            Bitmap bitmap = (Bitmap)Bitmap.FromFile(FkPath.Combine("wwwroot", pictureItem.Path, FkPath.DirectorySeparator.Backslash));
#endif

#warning 不清楚中心点是否与scale有关
            return String.Format(
                "left:{0}px; " +
                "top:{1}px; " +
                "transform-origin: {2}% {3}%; " +
                "z-index: {4}; " +
                "position: absolute;",
                pictureItem.Position.Item1,
                pictureItem.Position.Item2,
                pictureItem.TransformOrigin.Item1 / bitmap.Width * 100.0,
                pictureItem.TransformOrigin.Item2 / bitmap.Height * 100.0,
                (useShadowClass ? int.MaxValue : pictureItem.ZIndex)
            );
        }
    }

    public string ImageStyle
    {
        get
        {
#warning String.Format会忽略掉第7个及以后的参数？？？
            StringBuilder styleText = new StringBuilder();
            styleText.Append(String.Format(
                "-webkit-filter: grayscale({0}%); filter: grayscale({0}%); ",
                PepoleAmount == 0 ? "100" : "0"
            ));

            if (useShadowClass || ForceShadow)
            {
                styleText.Append(" -webkit-filter: drop-shadow(8px 8px 10px yellow); filter: drop-shadow(0px 0px 10px yellow);");
            }

            return styleText.ToString();
        }
    }

    private bool useShadowClass = false;
    public void OnPointerEnter()
    {
        //OnPointerMapItemChanged.InvokeAsync(ThisLocation).Wait();

        if (!useShadowClass)
        {
            useShadowClass = true;
            StateHasChanged();
        }
    }
    public void OnPointerLeave()
    {
        //#warning 不知道会不会出现极端情况。
        //OnPointerMapItemChanged.InvokeAsync(null).Wait();

        if (useShadowClass)
        {
            useShadowClass=false;
            StateHasChanged();
        }
    }

    public void OnClick()
    {
        OnClickMapItem.InvokeAsync(ThisLocation).Wait();
    }

    public void OnClickOut()
    {
        OnClickMapItem.InvokeAsync(null).Wait();
    }

    //// https://stackoverflow.com/questions/59804966/blazor-problem-with-updating-bootstrap-tooltip
    //protected override async Task OnAfterRenderAsync(bool firstRender)
    //{
    //    await JsRuntime.InvokeVoidAsync("setTooltip");
    //}
}