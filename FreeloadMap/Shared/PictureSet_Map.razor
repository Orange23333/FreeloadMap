<div class="alert alert-secondary mt-4" role="alert" @onclick="OnClick" @ontouchstart="OnClick">
    <strong>@Title</strong>

    <div style="@MapSizeStyle">
        @foreach(var locationPictureBindingToPictureName in filteredBigInfoSet.LocationPictureBindingDictionary)
        {
            <PictureSet_Item PictureItem=@(PictureItemDictionary[locationPictureBindingToPictureName.Value]) ViewMode=@ViewMode ThisLocation=@(locationPictureBindingToPictureName.Key) OnPointerMapItemChanged="@OnPointerMapItemChangedHandler" OnClickMapItem="@OnClickMapItemHandler" ForceShadow=@(locationPictureBindingToPictureName.Key==ClickLocationFilter) PepoleAmount=@(filteredBigInfoSet.FindInLocationToSchoolsDictionary(locationPictureBindingToPictureName.Key).Count) />
        }

        @if (ViewMode == MapViewMode.Direct)
        {
            
        }
        else if(ViewMode == MapViewMode.InBox)
        {
            @if (clickLocationFilter != null)
            {
                <InBox_Schools LeftToParent="@MapWidth" SchoolToStudentsDictionary=@click_SchoolToStudentsDictioanry OnClickClose=@((object arg)=>{ClickLocationFilter = null;}) />
            }
        }
    </div>

    <a>@FooterComment</a>
</div>

@code {
    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public string FooterComment { get; set; }

    [Parameter]
    public double MapWidth{ get; set; }

    [Parameter]
    public double MapHeight{ get; set; }

    [Parameter]
    public MapViewMode ViewMode{ get; set; }

    [Parameter]
    public Dictionary<string, PictureItemStructure> PictureItemDictionary { get; set; }

    [Parameter]
    public BigInfos BigInfoSet { get; set; }
    private BigInfos filteredBigInfoSet = null;

    [Parameter]
    public LevelLocation LocationFilter { get; set; } = LevelLocation.AnyLocation;

    private LevelLocation clickLocationFilter = null;
    private LevelLocation ClickLocationFilter
    {
        get{ return clickLocationFilter; }
        set
        {
            if (clickLocationFilter != value)
            {
                clickLocationFilter=value;
                if (clickLocationFilter != null)
                {
                    click_SchoolToStudentsDictioanry= BigInfoSet.FilterByLocation(clickLocationFilter).SchoolToStudentsDictionary;
                }
                StateHasChanged();
            }
        }
    }
    private Dictionary<SchoolInfo,List<StudentInfo>> click_SchoolToStudentsDictioanry = null;
    
    public string MapSizeStyle
    {
        get
        {
            return "width: " + MapWidth.ToString() + "px; height: " + MapHeight.ToString() + "px;";
        }
    }

    public PictureSetProjectFile pictureSetProjectFile = null;

    public PictureItemStructure GetPictureItemStructure(int i)
    {
        return pictureSetProjectFile.PictureItems[i];
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        filteredBigInfoSet = BigInfoSet.FilterByLocation(LocationFilter);

        //pictureSetProjectFile = new PictureSetProjectFile();
        //pictureSetProjectFile.Load(System.IO.Path.Combine(Environment.CurrentDirectory, System.IO.Path.Combine("wwwroot", PictureSetProjectSrc).Replace('\\','/')));
        //
        //for (i = 0; i < pictureSetProjectFile.PictureItems.Count; i++)
        //{
        //    #warning 在linux上莫名其妙没用。
        //    //PictureItemStructure pictureItemStructure = pictureSetProjectFile.PictureItems[i];
        //    //string tempPath = PictureItemStructure.GetAbsolutePath(pictureSetProjectFile.Path, pictureItemStructure.Path);
        //    //tempPath = PictureItemStructure.GetRelativePath(System.IO.Path.Combine(Environment.CurrentDirectory, "wwwroot/").Replace('\\', '/'), tempPath);
        //    //pictureItemStructure.Path = tempPath;
        //    //pictureSetProjectFile.PictureItems[i] = pictureItemStructure;
        //
        //    PictureItemStructure pictureItemStructure = pictureSetProjectFile.PictureItems[i];
        //    pictureItemStructure.Path = System.IO.Path.Combine(BasePath, pictureItemStructure.Path).Replace('\\', '/');
        //    pictureSetProjectFile.PictureItems[i] = pictureItemStructure;
        //}
    }

    public void OnPointerMapItemChangedHandler(LevelLocation location)
    {
        
    }

    public void OnClickMapItemHandler(LevelLocation location)
    {
        ClickLocationFilter = location;
    }

    public void OnClick()
    {
        //ClickLocationFilter = null;
    }
}
